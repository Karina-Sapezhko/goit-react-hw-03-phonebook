{"version":3,"sources":["componens/App.module.css","componens/contactForm/ContactForm.js","componens/contactList/ContactList.js","componens/filter/Filter.js","componens/App.js","index.js","componens/contactForm/ContactForm.module.css","componens/contactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleSubmitForm","event","preventDefault","contact","id","alert","props","submit","reset","handleChange","currentTarget","value","setState","this","className","styles","form","onSubmit","htmlFor","type","onChange","button","Component","ContactList","contacts","onDeleteContact","map","item","key","onClick","propType","PropTypes","arrayOf","shape","string","isRequired","func","Filter","filter","handleFilterChange","App","formSubmitHandler","data","find","prev","filterContacts","toLowerCase","includes","deleteContact","idContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","box","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e04efdde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__1T7ys\"};","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleSubmitForm = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    name === '' && number === ''\n      ? alert('Please enter data.')\n      : this.props.submit(contact);\n\n    this.reset();\n  };\n\n  handleChange = event => {\n    const { value, name } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => this.setState({ name: '', number: '' });\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmitForm}>\n        <label htmlFor={this.nameInputId}>\n          <p>Name:</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          <p>Number:</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styles from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li className={styles.item} key={id}>\n        <p>\n          {name}: {number}\n        </p>\n        <button className={styles.button} onClick={() => onDeleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propType = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ filter, handleFilterChange }) => (\n  <label>\n    <p>Find contacts by name:</p>\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={handleFilterChange}\n    />\n  </label>\n);\n\nFilter.propType = {\n  filter: PropTypes.string.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { ContactForm } from './contactForm/ContactForm';\nimport { ContactList } from './contactList/ContactList';\nimport { Filter } from './filter/Filter';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const { contacts } = this.state;\n    const findName = contacts.find(contact => contact.name === data.name);\n\n    if (findName) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      this.setState(prev => ({\n        contacts: [data, ...prev.contacts],\n      }));\n    }\n  };\n\n  handleFilterChange = event => {\n    const { value } = event.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  deleteContact = idContact => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== idContact),\n    }));\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <div className={styles.box}>\n        <h1>Phonebook</h1>\n        <ContactForm submit={this.formSubmitHandler} />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handleFilterChange={this.handleFilterChange} />\n\n        <ContactList\n          contacts={this.filterContacts()}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './componens/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__FiNfV\",\"button\":\"ContactForm_button__2ESbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__zoBhr\",\"button\":\"ContactList_button__7U_cw\"};"],"sourceRoot":""}